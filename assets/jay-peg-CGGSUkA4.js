import{S as p,g as u,A as m,m as o,R as N,b as f,e as M,n as _,o as U,p as V,V as H}from"./restructure-CCPsyU-B.js";const j=new p({identifier:new u(1),value:new u(1)}),z={name:()=>"DAC",length:o,tables:new m(j,t=>t.length/2)},R=(t,e)=>t[e],E=(t,e)=>t[e]<<8|t[e+1],O=(t,e)=>t[e]|t[e+1]<<8,D=(t,e)=>C(t,e)>>>0,x=(t,e)=>P(t,e)>>>0,k=t=>Array.from(t,e=>e.toString(16).padStart(2,"0")).join(""),J=new TextDecoder("utf-8"),X=t=>J.decode(t),q=t=>{const e=t.reduce((r,s)=>r+s.length,0),i=new Uint8Array(e);let n=0;return t.forEach(r=>{i.set(r,n),n+=r.length}),i},C=(t,e)=>t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3],P=(t,e)=>t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24;class W{decode(e,i){const n={};let r=e.buffer.slice(e.pos,e.pos+i.length-2);for(;r.length>0;){let s=1;const a=[],c=R(r,0),d=r.slice(s,s+16);s+=16;for(const h of d)a.push(r.slice(s,s+h)),s+=h;r=r.slice(s),n[c]=q(a)}return e.pos+=i.length-2,n}}const G={name:()=>"DHT",length:o,tables:new W},Q={name:()=>"DQT",length:o,tables:new m(new p({identifier:new u(1),data:new u(64)}),t=>(t.length-2)/65)},Y={name:()=>"DRI",length:o,restartInterval:o},$={name:()=>"EOI",afterEOI:new N(f,1/0)},S={ifd:{"010e":"imageDescription","010f":"make","011a":"xResolution","011b":"yResolution","011c":"planarConfiguration","012d":"transferFunction","013b":"artist","013e":"whitePoint","013f":"primaryChromaticities","0100":"imageWidth","0101":"imageHeight","0102":"bitsPerSample","0103":"compression","0106":"photometricInterpretation","0110":"model","0111":"stripOffsets","0112":"orientation","0115":"samplesPerPixel","0116":"rowsPerStrip","0117":"stripByteCounts","0128":"resolutionUnit","0131":"software","0132":"dateTime","0201":"jpegInterchangeFormat","0202":"jpegInterchangeFormatLength","0211":"ycbCrCoefficients","0212":"ycbCrSubSampling","0213":"ycbCrPositioning","0214":"referenceBlackWhite","829a":"exposureTime","829d":"fNumber","920a":"focalLength","927c":"makerNote",8298:"copyright",8769:"exifIFDPointer",8822:"exposureProgram",8824:"spectralSensitivity",8825:"gpsInfoIFDPointer",8827:"photographicSensitivity",8828:"oecf",8830:"sensitivityType",8831:"standardOutputSensitivity",8832:"recommendedExposureIndex",8833:"isoSpeed",8834:"isoSpeedLatitudeyyy",8835:"isoSpeedLatitudezzz",9e3:"exifVersion",9003:"dateTimeOriginal",9004:"dateTimeDigitized",9101:"componentsConfiguration",9102:"compressedBitsPerPixel",9201:"shutterSpeedValue",9202:"apertureValue",9203:"brightnessValue",9204:"exposureBiasValue",9205:"maxApertureValue",9206:"subjectDistance",9207:"meteringMode",9208:"lightSource",9209:"flash",9214:"subjectArea",9286:"userComment",9290:"subSecTime",9291:"subSecTimeOriginal",9292:"subSecTimeDigitized",a000:"flashpixVersion",a001:"colorSpace",a002:"pixelXDimension",a003:"pixelYDimension",a004:"relatedSoundFile",a005:"interoperabilityIFDPointer",a20b:"flashEnergy",a20c:"spatialFrequencyResponse",a20e:"focalPlaneXResolution",a20f:"focalPlaneYResolution",a40a:"sharpness",a40b:"deviceSettingDescription",a40c:"subjectDistanceRange",a210:"focalPlaneResolutionUnit",a214:"subjectLocation",a215:"exposureIndex",a217:"sensingMethod",a300:"fileSource",a301:"sceneType",a302:"cfaPattern",a401:"customRendered",a402:"exposureMode",a403:"whiteBalance",a404:"digitalZoomRatio",a405:"focalLengthIn35mmFilm",a406:"sceneCaptureType",a407:"gainControl",a408:"contrast",a409:"saturation",a420:"imageUniqueID",a430:"cameraOwnerName",a431:"bodySerialNumber",a432:"lensSpecification",a433:"lensMake",a434:"lensModel",a435:"lensSerialNumber",a500:"gamma"},gps:{"0000":"gpsVersionID","0001":"gpsLatitudeRef","0002":"gpsLatitude","0003":"gpsLongitudeRef","0004":"gpsLongitude","0005":"gpsAltitudeRef","0006":"gpsAltitude","0007":"gpsTimeStamp","0008":"gpsSatellites","0009":"gpsStatus","000a":"gpsMeasureMode","000b":"gpsDOP","000c":"gpsSpeedRef","000d":"gpsSpeed","000e":"gpsTrackRef","000f":"gpsTrack","0010":"gpsImgDirectionRef","0011":"gpsImgDirection","0012":"gpsMapDatum","0013":"gpsDestLatitudeRef","0014":"gpsDestLatitude","0015":"gpsDestLongitudeRef","0016":"gpsDestLongitude","0017":"gpsDestBearingRef","0018":"gpsDestBearing","0019":"gpsDestDistanceRef","001a":"gpsDestDistance","001b":"gpsProcessingMethod","001c":"gpsAreaInformation","001d":"gpsDateStamp","001e":"gpsDifferential","001f":"gpsHPositioningError"}};class Z{constructor(e){this.bigEndian=e,this.bytes=[0,1,1,2,4,8,1,1,2,4,8,4,8]}_getTagValue(e,i,n){switch(i){case 2:return e.toString("ascii").replace(/\0+$/,"");case 129:return e.toString("utf8").replace(/\0+$/,"");case 7:return"0x"+e.toString("hex");default:return this._getTagValueForNumericalData(e,i,n)}}_getTagValueForNumericalData(e,i,n){const r=[],s=this.bytes[i];for(let a=0;a<n;a+=1)r.push(this._getSingleTagValueForNumericalData(e,i,a*s));return r.length===1?r[0]:r}_getSingleTagValueForNumericalData(e,i,n){const r=c=>this.bigEndian?E(e,c):O(e,c),s=c=>this.bigEndian?D(e,c):x(e,c),a=c=>this.bigEndian?C(e,c):P(e,c);switch(i){case 1:return R(e,n);case 3:return r(n);case 4:return s(n);case 5:return s(n)/s(n+4);case 9:return a(n);case 10:return a(n)/a(n+4)}}_decodeIDFEntries(e,i,n,r=!1){let s=2+n;const a={},c=l=>this.bigEndian?E(e,l):O(e,l),d=l=>this.bigEndian?D(e,l):x(e,l),h=c(n);for(let l=0;l<h;l++){const I=e.slice(s,s+2),w=c(s+2),F=d(s+4),A=this.bytes[w],T=F*A;let b=e.slice(s+8,s+12);if(T>4){const y=this.bigEndian?D(b,0):x(b,0);b=e.slice(y,y+T)}const L=this._getTagValue(b,w,F),B=this.bigEndian?k(I):k(I.reverse()),v=i[B];a[v]=L,s+=12}return a}decode(e,i){const n=e.buffer.slice(e.pos-8),r=i.offsetToFirstIFD;if(r>n.length)return e.pos+=i.parent.length-16,{};const s=this._decodeIDFEntries(n,S.ifd,r),{exifIFDPointer:a,gpsInfoIFDPointer:c}=s;if(a&&(s.subExif=this._decodeIDFEntries(n,S.ifd,a)),c){const d=c;s.gpsInfo=this._decodeIDFEntries(n,S.gps,d,!0)}return e.pos+=i.parent.length-16,s}}const K=t=>{const e=t?o:V,i=t?_:U;return new p({fortyTwo:e,offsetToFirstIFD:i,entries:new Z(t)})};class ee{decode(e,i){const r=X(e.buffer.slice(e.pos,e.pos+2))==="MM";return e.pos+=2,K(r).decode(e,i).entries}}const te={name:()=>"EXIF",length:o,identifier:new M(6),entries:new ee},ne={name:()=>"JFIF",length:o,identifier:new M(5),version:o,units:f,xDensity:o,yDensity:o,thumbnailWidth:f,thumbnailHeight:f};class se{decode(e){const i=e.buffer.slice(e.pos);let n=0,r=i.indexOf(255);for(;r!==-1;){n=r;const s=i[n+1],a=s>=208&&s<=215;if(s!==0&&!a)break;r=i.indexOf(255,r+1)}return e.pos+=n,i.slice(0,n)}}const ie=new p({scanComponentSelector:f,entropyCodingTable:new u(1)}),re={name:()=>"SOS",length:o,numberOfImageComponents:f,componentSpecifications:new m(ie,t=>t.numberOfImageComponents),startOfSpectral:f,endOfSpectral:f,successiveApproximationBit:new u(1),data:new se},ae=new p({id:f,samplingFactors:f,quantizationTableId:f}),g={name:()=>"SOF",length:o,precision:f,height:o,width:o,numberOfComponents:f,components:new m(ae,t=>t.numberOfComponents)},oe={name:()=>"SOI"},ce={length:o,buf:new u(t=>t.length-2)},ge=Array(63).fill(0).reduce((t,e,i)=>({...t,[i+65472]:ce}),{}),fe=new H(o,{...ge,65472:g,65473:g,65474:g,65475:g,65476:G,65477:g,65478:g,65479:g,65481:g,65482:g,65483:g,65484:z,65485:g,65486:g,65487:g,65496:oe,65497:$,65498:re,65499:Q,65501:Y,65504:ne,65505:te}),le=new m(fe),ue=t=>le.fromBuffer(t).map(({version:i,...n})=>({type:i,...n})),pe={decode:ue};export{pe as _};
